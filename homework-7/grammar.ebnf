program  = {function_definition | expression | statement};
function_definition = 'fn', identifier, parenthetical_expression, '{', {expression | statement}, '}'; 
identifier  = (a..z | A..Z), [{(a..z | A..Z | 0..9)}];
number  = {0..9}, [('.', {0..9})];
boolean  = 'true' | 'false';
string  = {? all visible characters ?};
function_call  = identifier, '(', expression, ')';
parenthetical_expression  = '(', expression, ')';
l4  = function_call | number | identifier | parenthetical_expression;
l3_infix  = ('^'), l4;
l3  = l4, l3_infix ;
l2_infix  = ('*' | '/'), l3;
l2  = l3, l2_infix;
l1_infix  = ('+' | '-'), l2;
l1  = l2, l1_infix;
math_expression  = l1;
expression  = (math_expression | number | function_call | string | boolean | identifier), ';' | e;
statement  = variable_define | function_return;
function_return  = 'return', expression;
variable_define  = 'let', identifier, '=', expression;
arguments  = expression, other_arg;
other_arg  = ',', arguments | e; 
comment  = '//', {string};